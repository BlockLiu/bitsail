import{_ as l,r as o,o as i,c as p,a as e,b as t,d as n,w as s,e as r}from"./app.f58ef234.js";const d={},u=e("h1",{id:"hudi-connector",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hudi-connector","aria-hidden":"true"},"#"),t(" Hudi connector")],-1),c=r(`<p>The <em><strong>BitSail</strong></em> hudi connector supports reading and writing to hudi tables. The main function points are as follows:</p><ul><li>Support streaming write to Hudi table.</li><li>Support batch write to Hudi table.</li><li>Support batch read from Hudi table.</li></ul><h2 id="supported-hudi-versions" tabindex="-1"><a class="header-anchor" href="#supported-hudi-versions" aria-hidden="true">#</a> Supported hudi versions</h2><ul><li>0.11.1</li></ul><h2 id="maven-dependency" tabindex="-1"><a class="header-anchor" href="#maven-dependency" aria-hidden="true">#</a> Maven dependency</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;dependency&gt;
   &lt;groupId&gt;com.bytedance.bitsail&lt;/groupId&gt;
   &lt;artifactId&gt;bitsail-connector-hudi&lt;/artifactId&gt;
   &lt;version&gt;\${revision}&lt;/version&gt;
&lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hudi-reader" tabindex="-1"><a class="header-anchor" href="#hudi-reader" aria-hidden="true">#</a> Hudi reader</h2><h3 id="supported-data-types" tabindex="-1"><a class="header-anchor" href="#supported-data-types" aria-hidden="true">#</a> Supported data types</h3><ul><li></li><li>Basic Data types: <ul><li>Integer type: <ul><li>tinyint</li><li>smallint</li><li>int</li><li>bigint</li></ul></li><li>Float type: <ul><li>float</li><li>double</li><li>decimal</li></ul></li><li>Time type: <ul><li>timestamp</li><li>date</li></ul></li><li>String type: <ul><li>string</li><li>varchar</li><li>char</li></ul></li><li>Bool type: <ul><li>boolean</li></ul></li><li>Binary type: <ul><li>binary</li></ul></li></ul></li><li>Composited data types: <ul><li>map</li><li>array</li></ul></li></ul><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h3><p>The following mentioned parameters should be added to <code>job.reader</code> block when using, for example:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;job&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;reader&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
      <span class="token property">&quot;hoodie&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;datasource&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
          <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;snapshot&quot;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span><span class="token string">&quot;/path/to/table&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;class&quot;</span><span class="token operator">:</span><span class="token string">&quot;com.bytedance.bitsail.connector.legacy.hudi.dag.HudiSourceFunctionDAGBuilder&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;table&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;MERGE_ON_READ&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="necessary-parameters" tabindex="-1"><a class="header-anchor" href="#necessary-parameters" aria-hidden="true">#</a> Necessary parameters</h4><table><thead><tr><th style="text-align:left;">Param name</th><th style="text-align:left;">Required</th><th style="text-align:left;">Optional value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">class</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;">Hudi read connector class name, <code>com.bytedance.bitsail.connector.legacy.hudi.dag.HudiSourceFunctionDAGBuilder</code></td></tr><tr><td style="text-align:left;">path</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;">the path of the table, could be HDFS, S3, or other file systems.</td></tr><tr><td style="text-align:left;">table.type</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;">The type of the Hudi table, MERGE_ON_READ or COPY_ON_WRITE</td></tr><tr><td style="text-align:left;">hoodie.datasource.query.type</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;">Query type, could be <code>snapshot</code> or <code>read_optimized</code></td></tr></tbody></table><h4 id="optional-parameters" tabindex="-1"><a class="header-anchor" href="#optional-parameters" aria-hidden="true">#</a> Optional parameters</h4><table><thead><tr><th style="text-align:left;">Param name</th><th style="text-align:left;">Required</th><th style="text-align:left;">Optional value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">reader_parallelism_num</td><td style="text-align:left;">No</td><td style="text-align:left;"></td><td style="text-align:left;">Read parallelism num</td></tr></tbody></table><h2 id="hudi-writer" tabindex="-1"><a class="header-anchor" href="#hudi-writer" aria-hidden="true">#</a> Hudi writer</h2><h3 id="supported-data-type" tabindex="-1"><a class="header-anchor" href="#supported-data-type" aria-hidden="true">#</a> Supported data type</h3><ul><li>Basic data types supported: <ul><li>Integer type: <ul><li>tinyint</li><li>smallint</li><li>int</li><li>bigint</li></ul></li><li>Float type: <ul><li>float</li><li>double</li><li>decimal</li></ul></li><li>Time type: <ul><li>timestamp</li><li>date</li></ul></li><li>String type: <ul><li>string</li><li>varchar</li><li>char</li></ul></li><li>Bool type: <ul><li>boolean</li></ul></li><li>Binary type: <ul><li>binary</li></ul></li></ul></li><li>Composited data types supported: <ul><li>map</li><li>array</li></ul></li></ul><h3 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h3><p>The following mentioned parameters should be added to <code>job.writer</code> block when using, for example:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;job&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;writer&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;hoodie&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;bucket&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;num&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token property">&quot;buckets&quot;</span><span class="token operator">:</span> <span class="token string">&quot;4&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;hash&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token property">&quot;field&quot;</span><span class="token operator">:</span> <span class="token string">&quot;id&quot;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;datasource&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;write&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;recordkey&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token property">&quot;field&quot;</span><span class="token operator">:</span> <span class="token string">&quot;id&quot;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;table&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test_table&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/path/to/table&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;BUCKET&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;com.bytedance.bitsail.connector.legacy.hudi.sink.HudiSinkFunctionDAGBuilder&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;write&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;operation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;upsert&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;table&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;MERGE_ON_READ&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;source_schema&quot;</span><span class="token operator">:</span> <span class="token string">&quot;[{\\&quot;name\\&quot;:\\&quot;id\\&quot;,\\&quot;type\\&quot;:\\&quot;bigint\\&quot;},{\\&quot;name\\&quot;:\\&quot;test\\&quot;,\\&quot;type\\&quot;:\\&quot;string\\&quot;},{\\&quot;name\\&quot;:\\&quot;timestamp\\&quot;,\\&quot;type\\&quot;:\\&quot;string\\&quot;}]&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;sink_schema&quot;</span><span class="token operator">:</span> <span class="token string">&quot;[{\\&quot;name\\&quot;:\\&quot;id\\&quot;,\\&quot;type\\&quot;:\\&quot;bigint\\&quot;},{\\&quot;name\\&quot;:\\&quot;test\\&quot;,\\&quot;type\\&quot;:\\&quot;string\\&quot;},{\\&quot;name\\&quot;:\\&quot;timestamp\\&quot;,\\&quot;type\\&quot;:\\&quot;string\\&quot;}]&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="necessary-parameters-1" tabindex="-1"><a class="header-anchor" href="#necessary-parameters-1" aria-hidden="true">#</a> Necessary parameters</h4><table><thead><tr><th style="text-align:left;">Param name</th><th style="text-align:left;">Is necessary</th><th style="text-align:left;">Optional value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">class</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;">Hudi write class name, <code>com.bytedance.bitsail.connector.legacy.hudi.sink.HudiSinkFunctionDAGBuilder</code></td></tr><tr><td style="text-align:left;">write.operation</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;"><code>upsert</code> <code>insert</code> <code>bulk_insert</code></td></tr><tr><td style="text-align:left;">table.type</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;"><code>MERGE_ON_READ</code> <code>COPY_ON_WRITE</code></td></tr><tr><td style="text-align:left;">path</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;">path to the Hudi table, could be HDFS, S3, or other file system. If path not exists, the table will be created on this path.</td></tr><tr><td style="text-align:left;">format_type</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;">format of the input data source, currently only support <code>json</code></td></tr><tr><td style="text-align:left;">source_schema</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;">schema used to deserialize source data.</td></tr><tr><td style="text-align:left;">sink_schema</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;">schema used to write hoodie data</td></tr><tr><td style="text-align:left;">hoodie.table.name</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;">the name of the hoodie table</td></tr></tbody></table><h4 id="optional-parameters-1" tabindex="-1"><a class="header-anchor" href="#optional-parameters-1" aria-hidden="true">#</a> Optional parameters</h4><p>For more advance parameter, please checkout <code>FlinkOptions.java</code> class.</p><table><thead><tr><th style="text-align:left;">Param name</th><th style="text-align:left;">Is necessary</th><th style="text-align:left;">Optional value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">hoodie.datasource.write.recordkey.field</td><td style="text-align:left;">false</td><td style="text-align:left;"></td><td style="text-align:left;">For <code>upsert</code> operation, we need to define the primary key.</td></tr><tr><td style="text-align:left;">index.type</td><td style="text-align:left;">false</td><td style="text-align:left;"></td><td style="text-align:left;">For <code>upsert</code> operation, we need to define the index type. could be <code>STATE</code> or <code>BUCKET</code></td></tr><tr><td style="text-align:left;">hoodie.bucket.index.num.buckets</td><td style="text-align:left;">false</td><td style="text-align:left;"></td><td style="text-align:left;">If we use Bucket index, we need to define the bucket number.</td></tr><tr><td style="text-align:left;">hoodie.bucket.index.hash.field</td><td style="text-align:left;">false</td><td style="text-align:left;"></td><td style="text-align:left;">If we use Bucket index, we need to define a field to determine hash index.</td></tr></tbody></table><h2 id="hudi-compaction" tabindex="-1"><a class="header-anchor" href="#hudi-compaction" aria-hidden="true">#</a> Hudi Compaction</h2><h3 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h3><p>Compaction has well-defined reader and writer parameters</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;job&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token property">&quot;reader&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span><span class="token string">&quot;/path/to/table&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;class&quot;</span><span class="token operator">:</span><span class="token string">&quot;com.bytedance.bitsail.connector.legacy.hudi.dag.HudiCompactSourceDAGBuilder&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;writer&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span><span class="token string">&quot;/path/to/table&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;class&quot;</span><span class="token operator">:</span><span class="token string">&quot;com.bytedance.bitsail.connector.legacy.hudi.dag.HudiCompactSinkDAGBuilder&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="necessary-parameters-2" tabindex="-1"><a class="header-anchor" href="#necessary-parameters-2" aria-hidden="true">#</a> Necessary parameters</h4><table><thead><tr><th style="text-align:left;">Param name</th><th style="text-align:left;">Required</th><th style="text-align:left;">Optional value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">job.reader.class</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;">Hudi compaction read connector class name, <code>com.bytedance.bitsail.connector.legacy.hudi.dag.HudiCompactSourceDAGBuilder</code></td></tr><tr><td style="text-align:left;">job.writer.class</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;">Hudi compaction writer connector class name, <code>com.bytedance.bitsail.connector.legacy.hudi.dag.HudiCompactSinkDAGBuilder</code></td></tr><tr><td style="text-align:left;">job.reader.path</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;">the path of the table, could be HDFS, S3, or other file systems.</td></tr><tr><td style="text-align:left;">job.writer.path</td><td style="text-align:left;">Yes</td><td style="text-align:left;"></td><td style="text-align:left;">the path of the table, could be HDFS, S3, or other file systems.</td></tr></tbody></table><h4 id="optional-parameters-2" tabindex="-1"><a class="header-anchor" href="#optional-parameters-2" aria-hidden="true">#</a> Optional parameters</h4><table><thead><tr><th style="text-align:left;">Param name</th><th style="text-align:left;">Required</th><th style="text-align:left;">Optional value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">writer_parallelism_num</td><td style="text-align:left;">No</td><td style="text-align:left;"></td><td style="text-align:left;">parallelism to process the compaction</td></tr></tbody></table><h2 id="related-document" tabindex="-1"><a class="header-anchor" href="#related-document" aria-hidden="true">#</a> Related document</h2>`,36);function h(y,m){const a=o("RouterLink");return i(),p("div",null,[u,e("p",null,[t("Parent document: "),n(a,{to:"/src/connectors/introduction.html"},{default:s(()=>[t("connectors")]),_:1})]),c,e("p",null,[t("Configuration examples: "),n(a,{to:"/src/connectors/hudi/hudi-example.html"},{default:s(()=>[t("hudi-connector-example")]),_:1})])])}const k=l(d,[["render",h],["__file","hudi.html.vue"]]);export{k as default};
